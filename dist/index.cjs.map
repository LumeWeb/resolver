{"version":3,"sources":["../node_modules/tsup/assets/cjs_shims.js","../node_modules/bsert/lib/assert.js","../node_modules/brq/lib/mime.js","../node_modules/brq/lib/request.js","../node_modules/brq/lib/brq.js","../src/index.ts","../src/Resolver.ts","../src/resolvers/handshake.ts","../src/lib/util.ts","../src/resolvers/handshake/HnsClient.ts","../src/resolvers/icann.ts","../src/resolvers/eip137.ts"],"sourcesContent":["// Shim globals in cjs bundle\n// There's a weird bug that esbuild will always inject importMetaUrl\n// if we export it as `const importMetaUrl = ... __filename ...`\n// But using a function will not cause this issue\n\nconst getImportMetaUrl = () =>\n  typeof document === 'undefined'\n    ? new URL('file:' + __filename).href\n    : (document.currentScript && document.currentScript.src) ||\n      new URL('main.js', document.baseURI).href\n\nexport const importMetaUrl = /* @__PURE__ */ getImportMetaUrl()\n","/*!\n * assert.js - assertions for javascript\n * Copyright (c) 2018, Christopher Jeffrey (MIT License).\n * https://github.com/chjj/bsert\n */\n\n'use strict';\n\n/**\n * AssertionError\n */\n\nclass AssertionError extends Error {\n  constructor(options) {\n    if (typeof options === 'string')\n      options = { message: options };\n\n    if (options === null || typeof options !== 'object')\n      options = {};\n\n    let message = null;\n    let operator = 'fail';\n    let generatedMessage = Boolean(options.generatedMessage);\n\n    if (options.message != null)\n      message = toString(options.message);\n\n    if (typeof options.operator === 'string')\n      operator = options.operator;\n\n    if (message == null) {\n      if (operator === 'fail') {\n        message = 'Assertion failed.';\n      } else {\n        const a = stringify(options.actual);\n        const b = stringify(options.expected);\n\n        message = `${a} ${operator} ${b}`;\n      }\n\n      generatedMessage = true;\n    }\n\n    super(message);\n\n    let start = this.constructor;\n\n    if (typeof options.stackStartFunction === 'function')\n      start = options.stackStartFunction;\n    else if (typeof options.stackStartFn === 'function')\n      start = options.stackStartFn;\n\n    this.type = 'AssertionError';\n    this.name = 'AssertionError [ERR_ASSERTION]';\n    this.code = 'ERR_ASSERTION';\n    this.generatedMessage = generatedMessage;\n    this.actual = options.actual;\n    this.expected = options.expected;\n    this.operator = operator;\n\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(this, start);\n  }\n}\n\n/*\n * Assert\n */\n\nfunction assert(value, message) {\n  if (!value) {\n    let generatedMessage = false;\n\n    if (arguments.length === 0) {\n      message = 'No value argument passed to `assert()`.';\n      generatedMessage = true;\n    } else if (message == null) {\n      message = 'Assertion failed.';\n      generatedMessage = true;\n    } else if (isError(message)) {\n      throw message;\n    }\n\n    throw new AssertionError({\n      message,\n      actual: value,\n      expected: true,\n      operator: '==',\n      generatedMessage,\n      stackStartFn: assert\n    });\n  }\n}\n\nfunction equal(actual, expected, message) {\n  if (!Object.is(actual, expected)) {\n    if (isError(message))\n      throw message;\n\n    throw new AssertionError({\n      message,\n      actual,\n      expected,\n      operator: 'strictEqual',\n      stackStartFn: equal\n    });\n  }\n}\n\nfunction notEqual(actual, expected, message) {\n  if (Object.is(actual, expected)) {\n    if (isError(message))\n      throw message;\n\n    throw new AssertionError({\n      message,\n      actual,\n      expected,\n      operator: 'notStrictEqual',\n      stackStartFn: notEqual\n    });\n  }\n}\n\nfunction fail(message) {\n  let generatedMessage = false;\n\n  if (isError(message))\n    throw message;\n\n  if (message == null) {\n    message = 'Assertion failed.';\n    generatedMessage = true;\n  }\n\n  throw new AssertionError({\n    message,\n    actual: false,\n    expected: true,\n    operator: 'fail',\n    generatedMessage,\n    stackStartFn: fail\n  });\n}\n\nfunction throws(func, expected, message) {\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = undefined;\n  }\n\n  let thrown = false;\n  let err = null;\n\n  enforce(typeof func === 'function', 'func', 'function');\n\n  try {\n    func();\n  } catch (e) {\n    thrown = true;\n    err = e;\n  }\n\n  if (!thrown) {\n    let generatedMessage = false;\n\n    if (message == null) {\n      message = 'Missing expected exception.';\n      generatedMessage = true;\n    }\n\n    throw new AssertionError({\n      message,\n      actual: undefined,\n      expected,\n      operator: 'throws',\n      generatedMessage,\n      stackStartFn: throws\n    });\n  }\n\n  if (!testError(err, expected, message, throws))\n    throw err;\n}\n\nfunction doesNotThrow(func, expected, message) {\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = undefined;\n  }\n\n  let thrown = false;\n  let err = null;\n\n  enforce(typeof func === 'function', 'func', 'function');\n\n  try {\n    func();\n  } catch (e) {\n    thrown = true;\n    err = e;\n  }\n\n  if (!thrown)\n    return;\n\n  if (testError(err, expected, message, doesNotThrow)) {\n    let generatedMessage = false;\n\n    if (message == null) {\n      message = 'Got unwanted exception.';\n      generatedMessage = true;\n    }\n\n    throw new AssertionError({\n      message,\n      actual: err,\n      expected,\n      operator: 'doesNotThrow',\n      generatedMessage,\n      stackStartFn: doesNotThrow\n    });\n  }\n\n  throw err;\n}\n\nasync function rejects(func, expected, message) {\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = undefined;\n  }\n\n  let thrown = false;\n  let err = null;\n\n  if (typeof func !== 'function')\n    enforce(isPromise(func), 'func', 'promise');\n\n  try {\n    if (isPromise(func))\n      await func;\n    else\n      await func();\n  } catch (e) {\n    thrown = true;\n    err = e;\n  }\n\n  if (!thrown) {\n    let generatedMessage = false;\n\n    if (message == null) {\n      message = 'Missing expected rejection.';\n      generatedMessage = true;\n    }\n\n    throw new AssertionError({\n      message,\n      actual: undefined,\n      expected,\n      operator: 'rejects',\n      generatedMessage,\n      stackStartFn: rejects\n    });\n  }\n\n  if (!testError(err, expected, message, rejects))\n    throw err;\n}\n\nasync function doesNotReject(func, expected, message) {\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = undefined;\n  }\n\n  let thrown = false;\n  let err = null;\n\n  if (typeof func !== 'function')\n    enforce(isPromise(func), 'func', 'promise');\n\n  try {\n    if (isPromise(func))\n      await func;\n    else\n      await func();\n  } catch (e) {\n    thrown = true;\n    err = e;\n  }\n\n  if (!thrown)\n    return;\n\n  if (testError(err, expected, message, doesNotReject)) {\n    let generatedMessage = false;\n\n    if (message == null) {\n      message = 'Got unwanted rejection.';\n      generatedMessage = true;\n    }\n\n    throw new AssertionError({\n      message,\n      actual: undefined,\n      expected,\n      operator: 'doesNotReject',\n      generatedMessage,\n      stackStartFn: doesNotReject\n    });\n  }\n\n  throw err;\n}\n\nfunction ifError(err) {\n  if (err != null) {\n    let message = 'ifError got unwanted exception: ';\n\n    if (typeof err === 'object' && typeof err.message === 'string') {\n      if (err.message.length === 0 && err.constructor)\n        message += err.constructor.name;\n      else\n        message += err.message;\n    } else {\n      message += stringify(err);\n    }\n\n    throw new AssertionError({\n      message,\n      actual: err,\n      expected: null,\n      operator: 'ifError',\n      generatedMessage: true,\n      stackStartFn: ifError\n    });\n  }\n}\n\nfunction deepEqual(actual, expected, message) {\n  if (!isDeepEqual(actual, expected, false)) {\n    if (isError(message))\n      throw message;\n\n    throw new AssertionError({\n      message,\n      actual,\n      expected,\n      operator: 'deepStrictEqual',\n      stackStartFn: deepEqual\n    });\n  }\n}\n\nfunction notDeepEqual(actual, expected, message) {\n  if (isDeepEqual(actual, expected, true)) {\n    if (isError(message))\n      throw message;\n\n    throw new AssertionError({\n      message,\n      actual,\n      expected,\n      operator: 'notDeepStrictEqual',\n      stackStartFn: notDeepEqual\n    });\n  }\n}\n\nfunction bufferEqual(actual, expected, enc, message) {\n  if (!isEncoding(enc)) {\n    message = enc;\n    enc = null;\n  }\n\n  if (enc == null)\n    enc = 'hex';\n\n  expected = bufferize(actual, expected, enc);\n\n  enforce(isBuffer(actual), 'actual', 'buffer');\n  enforce(isBuffer(expected), 'expected', 'buffer');\n\n  if (actual !== expected && !actual.equals(expected)) {\n    if (isError(message))\n      throw message;\n\n    throw new AssertionError({\n      message,\n      actual: actual.toString(enc),\n      expected: expected.toString(enc),\n      operator: 'bufferEqual',\n      stackStartFn: bufferEqual\n    });\n  }\n}\n\nfunction notBufferEqual(actual, expected, enc, message) {\n  if (!isEncoding(enc)) {\n    message = enc;\n    enc = null;\n  }\n\n  if (enc == null)\n    enc = 'hex';\n\n  expected = bufferize(actual, expected, enc);\n\n  enforce(isBuffer(actual), 'actual', 'buffer');\n  enforce(isBuffer(expected), 'expected', 'buffer');\n\n  if (actual === expected || actual.equals(expected)) {\n    if (isError(message))\n      throw message;\n\n    throw new AssertionError({\n      message,\n      actual: actual.toString(enc),\n      expected: expected.toString(enc),\n      operator: 'notBufferEqual',\n      stackStartFn: notBufferEqual\n    });\n  }\n}\n\nfunction enforce(value, name, type) {\n  if (!value) {\n    let msg;\n\n    if (name == null) {\n      msg = 'Invalid type for parameter.';\n    } else {\n      if (type == null)\n        msg = `Invalid type for \"${name}\".`;\n      else\n        msg = `\"${name}\" must be a(n) ${type}.`;\n    }\n\n    const err = new TypeError(msg);\n\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(err, enforce);\n\n    throw err;\n  }\n}\n\nfunction range(value, name) {\n  if (!value) {\n    const msg = name != null\n      ? `\"${name}\" is out of range.`\n      : 'Parameter is out of range.';\n\n    const err = new RangeError(msg);\n\n    if (Error.captureStackTrace)\n      Error.captureStackTrace(err, range);\n\n    throw err;\n  }\n}\n\n/*\n * Stringification\n */\n\nfunction stringify(value) {\n  switch (typeof value) {\n    case 'undefined':\n      return 'undefined';\n    case 'object':\n      if (value === null)\n        return 'null';\n      return `[${objectName(value)}]`;\n    case 'boolean':\n      return `${value}`;\n    case 'number':\n      return `${value}`;\n    case 'string':\n      if (value.length > 80)\n        value = `${value.substring(0, 77)}...`;\n      return JSON.stringify(value);\n    case 'symbol':\n      return tryString(value);\n    case 'function':\n      return `[${funcName(value)}]`;\n    case 'bigint':\n      return `${value}n`;\n    default:\n      return `[${typeof value}]`;\n  }\n}\n\nfunction toString(value) {\n  if (typeof value === 'string')\n    return value;\n\n  if (isError(value))\n    return tryString(value);\n\n  return stringify(value);\n}\n\nfunction tryString(value) {\n  try {\n    return String(value);\n  } catch (e) {\n    return 'Object';\n  }\n}\n\n/*\n * Error Testing\n */\n\nfunction testError(err, expected, message, func) {\n  if (expected == null)\n    return true;\n\n  if (isRegExp(expected))\n    return expected.test(err);\n\n  if (typeof expected !== 'function') {\n    if (func === doesNotThrow || func === doesNotReject)\n      throw new TypeError('\"expected\" must not be an object.');\n\n    if (typeof expected !== 'object')\n      throw new TypeError('\"expected\" must be an object.');\n\n    let generatedMessage = false;\n\n    if (message == null) {\n      const name = func === rejects ? 'rejection' : 'exception';\n      message = `Missing expected ${name}.`;\n      generatedMessage = true;\n    }\n\n    if (err == null || typeof err !== 'object') {\n      throw new AssertionError({\n        actual: err,\n        expected,\n        message,\n        operator: func.name,\n        generatedMessage,\n        stackStartFn: func\n      });\n    }\n\n    const keys = Object.keys(expected);\n\n    if (isError(expected))\n      keys.push('name', 'message');\n\n    if (keys.length === 0)\n      throw new TypeError('\"expected\" may not be an empty object.');\n\n    for (const key of keys) {\n      const expect = expected[key];\n      const value = err[key];\n\n      if (typeof value === 'string'\n          && isRegExp(expect)\n          && expect.test(value)) {\n        continue;\n      }\n\n      if ((key in err) && isDeepEqual(value, expect, false))\n        continue;\n\n      throw new AssertionError({\n        actual: err,\n        expected: expected,\n        message,\n        operator: func.name,\n        generatedMessage,\n        stackStartFn: func\n      });\n    }\n\n    return true;\n  }\n\n  if (expected.prototype !== undefined && (err instanceof expected))\n    return true;\n\n  if (Error.isPrototypeOf(expected))\n    return false;\n\n  return expected.call({}, err) === true;\n}\n\n/*\n * Comparisons\n */\n\nfunction isDeepEqual(x, y, fail) {\n  try {\n    return compare(x, y, null);\n  } catch (e) {\n    return fail;\n  }\n}\n\nfunction compare(a, b, cache) {\n  // Primitives.\n  if (Object.is(a, b))\n    return true;\n\n  if (!isObject(a) || !isObject(b))\n    return false;\n\n  // Semi-primitives.\n  if (objectString(a) !== objectString(b))\n    return false;\n\n  if (Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n\n  if (isBuffer(a) && isBuffer(b))\n    return a.equals(b);\n\n  if (isDate(a))\n    return Object.is(a.getTime(), b.getTime());\n\n  if (isRegExp(a)) {\n    return a.source === b.source\n        && a.global === b.global\n        && a.multiline === b.multiline\n        && a.lastIndex === b.lastIndex\n        && a.ignoreCase === b.ignoreCase;\n  }\n\n  if (isError(a)) {\n    if (a.message !== b.message)\n      return false;\n  }\n\n  if (isArrayBuffer(a)) {\n    a = new Uint8Array(a);\n    b = new Uint8Array(b);\n  }\n\n  if (isView(a) && !isBuffer(a)) {\n    if (isBuffer(b))\n      return false;\n\n    const x = new Uint8Array(a.buffer);\n    const y = new Uint8Array(b.buffer);\n\n    if (x.length !== y.length)\n      return false;\n\n    for (let i = 0; i < x.length; i++) {\n      if (x[i] !== y[i])\n        return false;\n    }\n\n    return true;\n  }\n\n  if (isSet(a)) {\n    if (a.size !== b.size)\n      return false;\n\n    const keys = new Set([...a, ...b]);\n\n    return keys.size === a.size;\n  }\n\n  // Recursive.\n  if (!cache) {\n    cache = {\n      a: new Map(),\n      b: new Map(),\n      p: 0\n    };\n  } else {\n    const aa = cache.a.get(a);\n\n    if (aa != null) {\n      const bb = cache.b.get(b);\n      if (bb != null)\n        return aa === bb;\n    }\n\n    cache.p += 1;\n  }\n\n  cache.a.set(a, cache.p);\n  cache.b.set(b, cache.p);\n\n  const ret = recurse(a, b, cache);\n\n  cache.a.delete(a);\n  cache.b.delete(b);\n\n  return ret;\n}\n\nfunction recurse(a, b, cache) {\n  if (isMap(a)) {\n    if (a.size !== b.size)\n      return false;\n\n    const keys = new Set([...a.keys(), ...b.keys()]);\n\n    if (keys.size !== a.size)\n      return false;\n\n    for (const key of keys) {\n      if (!compare(a.get(key), b.get(key), cache))\n        return false;\n    }\n\n    return true;\n  }\n\n  if (isArray(a)) {\n    if (a.length !== b.length)\n      return false;\n\n    for (let i = 0; i < a.length; i++) {\n      if (!compare(a[i], b[i], cache))\n        return false;\n    }\n\n    return true;\n  }\n\n  const ak = ownKeys(a);\n  const bk = ownKeys(b);\n\n  if (ak.length !== bk.length)\n    return false;\n\n  const keys = new Set([...ak, ...bk]);\n\n  if (keys.size !== ak.length)\n    return false;\n\n  for (const key of keys) {\n    if (!compare(a[key], b[key], cache))\n      return false;\n  }\n\n  return true;\n}\n\nfunction ownKeys(obj) {\n  const keys = Object.keys(obj);\n\n  if (!Object.getOwnPropertySymbols)\n    return keys;\n\n  if (!Object.getOwnPropertyDescriptor)\n    return keys;\n\n  const symbols = Object.getOwnPropertySymbols(obj);\n\n  for (const symbol of symbols) {\n    const desc = Object.getOwnPropertyDescriptor(obj, symbol);\n\n    if (desc && desc.enumerable)\n      keys.push(symbol);\n  }\n\n  return keys;\n}\n\n/*\n * Helpers\n */\n\nfunction objectString(obj) {\n  if (obj === undefined)\n    return '[object Undefined]';\n\n  if (obj === null)\n    return '[object Null]';\n\n  try {\n    return Object.prototype.toString.call(obj);\n  } catch (e) {\n    return '[object Object]';\n  }\n}\n\nfunction objectType(obj) {\n  return objectString(obj).slice(8, -1);\n}\n\nfunction objectName(obj) {\n  const type = objectType(obj);\n\n  if (obj == null)\n    return type;\n\n  if (type !== 'Object' && type !== 'Error')\n    return type;\n\n  let ctor, name;\n\n  try {\n    ctor = obj.constructor;\n  } catch (e) {\n    ;\n  }\n\n  if (ctor == null)\n    return type;\n\n  try {\n    name = ctor.name;\n  } catch (e) {\n    return type;\n  }\n\n  if (typeof name !== 'string' || name.length === 0)\n    return type;\n\n  return name;\n}\n\nfunction funcName(func) {\n  let name;\n\n  try {\n    name = func.name;\n  } catch (e) {\n    ;\n  }\n\n  if (typeof name !== 'string' || name.length === 0)\n    return 'Function';\n\n  return `Function: ${name}`;\n}\n\nfunction isArray(obj) {\n  return Array.isArray(obj);\n}\n\nfunction isArrayBuffer(obj) {\n  return obj instanceof ArrayBuffer;\n}\n\nfunction isBuffer(obj) {\n  return isObject(obj)\n      && typeof obj.writeUInt32LE === 'function'\n      && typeof obj.equals === 'function';\n}\n\nfunction isDate(obj) {\n  return obj instanceof Date;\n}\n\nfunction isError(obj) {\n  return obj instanceof Error;\n}\n\nfunction isMap(obj) {\n  return obj instanceof Map;\n}\n\nfunction isObject(obj) {\n  return obj && typeof obj === 'object';\n}\n\nfunction isPromise(obj) {\n  return obj instanceof Promise;\n}\n\nfunction isRegExp(obj) {\n  return obj instanceof RegExp;\n}\n\nfunction isSet(obj) {\n  return obj instanceof Set;\n}\n\nfunction isView(obj) {\n  return ArrayBuffer.isView(obj);\n}\n\nfunction isEncoding(enc) {\n  if (typeof enc !== 'string')\n    return false;\n\n  switch (enc) {\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'hex':\n    case 'latin1':\n    case 'ucs2':\n    case 'utf8':\n    case 'utf16le':\n      return true;\n  }\n\n  return false;\n}\n\nfunction bufferize(actual, expected, enc) {\n  if (typeof expected === 'string') {\n    if (!isBuffer(actual))\n      return null;\n\n    const {constructor} = actual;\n\n    if (!constructor || typeof constructor.from !== 'function')\n      return null;\n\n    if (!isEncoding(enc))\n      return null;\n\n    if (enc === 'hex' && (expected.length & 1))\n      return null;\n\n    const raw = constructor.from(expected, enc);\n\n    if (enc === 'hex' && raw.length !== (expected.length >>> 1))\n      return null;\n\n    return raw;\n  }\n\n  return expected;\n}\n\n/*\n * API\n */\n\nassert.AssertionError = AssertionError;\nassert.assert = assert;\nassert.strict = assert;\nassert.ok = assert;\nassert.equal = equal;\nassert.notEqual = notEqual;\nassert.strictEqual = equal;\nassert.notStrictEqual = notEqual;\nassert.fail = fail;\nassert.throws = throws;\nassert.doesNotThrow = doesNotThrow;\nassert.rejects = rejects;\nassert.doesNotReject = doesNotReject;\nassert.ifError = ifError;\nassert.deepEqual = deepEqual;\nassert.notDeepEqual = notDeepEqual;\nassert.deepStrictEqual = deepEqual;\nassert.notDeepStrictEqual = notDeepEqual;\nassert.bufferEqual = bufferEqual;\nassert.notBufferEqual = notBufferEqual;\nassert.enforce = enforce;\nassert.range = range;\n\n/*\n * Expose\n */\n\nmodule.exports = assert;\n","/*!\n * mime.js - mime types for brq\n * Copyright (c) 2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/brq\n */\n\n'use strict';\n\nconst assert = require('bsert');\n\nconst types = {\n  'atom': ['application/atom+xml', true],\n  'bin': ['application/octet-stream', false],\n  'bmp': ['image/bmp', false],\n  'cjs': ['application/javascript', true],\n  'css': ['text/css', true],\n  'dat': ['application/octet-stream', false],\n  'form': ['application/x-www-form-urlencoded', true],\n  'gif': ['image/gif', false],\n  'gz': ['application/x-gzip', false],\n  'htc': ['text/x-component', true],\n  'html': ['text/html', true],\n  'ico': ['image/x-icon', false],\n  'jpg': ['image/jpeg', false],\n  'jpeg': ['image/jpeg', false],\n  'js': ['application/javascript', true],\n  'json': ['application/json', true],\n  'log': ['text/plain', true],\n  'manifest': ['text/cache-manifest', false],\n  'mathml': ['application/mathml+xml', true],\n  'md': ['text/plain', true],\n  'mjs': ['application/javascript', true],\n  'mkv': ['video/x-matroska', false],\n  'mml': ['application/mathml+xml', true],\n  'mp3': ['audio/mpeg', false],\n  'mp4': ['video/mp4', false],\n  'mpeg': ['video/mpeg', false],\n  'mpg': ['video/mpeg', false],\n  'oga': ['audio/ogg', false],\n  'ogg': ['application/ogg', false],\n  'ogv': ['video/ogg', false],\n  'otf': ['font/otf', false],\n  'pdf': ['application/pdf', false],\n  'png': ['image/png', false],\n  'rdf': ['application/rdf+xml', true],\n  'rss': ['application/rss+xml', true],\n  'svg': ['image/svg+xml', false],\n  'swf': ['application/x-shockwave-flash', false],\n  'tar': ['application/x-tar', false],\n  'torrent': ['application/x-bittorrent', false],\n  'txt': ['text/plain', true],\n  'ttf': ['font/ttf', false],\n  'wav': ['audio/wav', false],\n  'webm': ['video/webm', false],\n  'woff': ['font/x-woff', false],\n  'xhtml': ['application/xhtml+xml', true],\n  'xbl': ['application/xml', true],\n  'xml': ['application/xml', true],\n  'xsl': ['application/xml', true],\n  'xslt': ['application/xslt+xml', true],\n  'zip': ['application/zip', false]\n};\n\nconst extensions = {\n  'application/atom+xml': 'atom',\n  'application/octet-stream': 'bin',\n  'image/bmp': 'bmp',\n  'text/css': 'css',\n  'application/x-www-form-urlencoded': 'form',\n  'image/gif': 'gif',\n  'application/x-gzip': 'gz',\n  'text/x-component': 'htc',\n  'text/html': 'html',\n  'text/xml': 'xml',\n  'image/x-icon': 'ico',\n  'image/jpeg': 'jpeg',\n  'text/javascript': 'js',\n  'application/javascript': 'js',\n  'text/x-json': 'json',\n  'application/json': 'json',\n  'text/json': 'json',\n  'text/plain': 'txt',\n  'text/cache-manifest': 'manifest',\n  'application/mathml+xml': 'mml',\n  'video/x-matroska': 'mkv',\n  'audio/x-matroska': 'mkv',\n  'audio/mpeg': 'mp3',\n  'audio/mpa': 'mp3',\n  'video/mp4': 'mp4',\n  'video/mpeg': 'mpg',\n  'audio/ogg': 'oga',\n  'application/ogg': 'ogg',\n  'video/ogg': 'ogv',\n  'font/otf': 'otf',\n  'application/pdf': 'pdf',\n  'application/x-pdf': 'pdf',\n  'image/png': 'png',\n  'application/rdf+xml': 'rdf',\n  'application/rss+xml': 'rss',\n  'image/svg+xml': 'svg',\n  'application/x-shockwave-flash': 'swf',\n  'application/x-tar': 'tar',\n  'application/x-bittorrent': 'torrent',\n  'font/ttf': 'ttf',\n  'audio/wav': 'wav',\n  'audio/wave': 'wav',\n  'video/webm': 'webm',\n  'audio/webm': 'webm',\n  'font/x-woff': 'woff',\n  'application/xhtml+xml': 'xhtml',\n  'application/xml': 'xsl',\n  'application/xslt+xml': 'xslt',\n  'application/zip': 'zip'\n};\n\n// Filename to extension\nexports.file = function file(path) {\n  assert(typeof path === 'string');\n\n  const name = path.split('/').pop();\n  const parts = name.split('.');\n\n  if (parts.length < 2)\n    return 'bin';\n\n  if (parts.length === 2 && parts[0] === '')\n    return 'txt';\n\n  const ext = parts[parts.length - 1];\n\n  if (types[ext])\n    return ext;\n\n  return 'bin';\n};\n\n// Is extension textual?\nexports.textual = function textual(ext) {\n  const value = types[ext];\n\n  if (!value)\n    return false;\n\n  return value[1];\n};\n\n// Extension to content-type\nexports.type = function type(ext) {\n  assert(typeof ext === 'string');\n\n  if (ext.indexOf('/') !== -1)\n    return ext;\n\n  const value = types[ext];\n\n  if (!value)\n    return 'application/octet-stream';\n\n  let [name, text] = value;\n\n  if (text)\n    name += '; charset=utf-8';\n\n  return name;\n};\n\n// Content-type to extension\nexports.ext = function ext(type) {\n  if (type == null)\n    return 'bin';\n\n  assert(typeof type === 'string');\n\n  [type] = type.split(';');\n  type = type.toLowerCase();\n  type = type.trim();\n\n  return extensions[type] || 'bin';\n};\n","/*!\n * request.js - http request for brq\n * Copyright (c) 2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/brq\n */\n\n'use strict';\n\nconst assert = require('bsert');\nconst {Stream} = require('stream');\nconst mime = require('./mime');\n\n/*\n * Lazily Loaded\n */\n\nlet URL = null;\nlet qs = null;\nlet http = null;\nlet https = null;\nlet StringDecoder = null;\n\nclass RequestOptions {\n  /**\n   * Request Options\n   * @constructor\n   * @ignore\n   * @param {Object} options\n   */\n\n  constructor(options, buffer) {\n    this.method = 'GET';\n    this.ssl = false;\n    this.host = 'localhost';\n    this.port = 80;\n    this.path = '/';\n    this.query = '';\n    this.strictSSL = true;\n    this.pool = false;\n    this.agent = 'brq';\n    this.lookup = null;\n\n    this.type = null;\n    this.expect = null;\n    this.body = null;\n    this.username = '';\n    this.password = '';\n    this.limit = 20 << 20;\n    this.maxRedirects = 5;\n    this.timeout = 5000;\n    this.buffer = buffer || false;\n    this.headers = Object.create(null);\n\n    // Hack\n    ensureRequires();\n\n    if (options)\n      this.fromOptions(options);\n  }\n\n  fromOptions(options) {\n    if (typeof options === 'string')\n      options = { url: options };\n\n    if (options.method != null) {\n      assert(typeof options.method === 'string');\n      this.method = options.method.toUpperCase();\n    }\n\n    if (options.uri != null)\n      this.navigate(options.uri);\n\n    if (options.url != null)\n      this.navigate(options.url);\n\n    if (options.ssl != null) {\n      assert(typeof options.ssl === 'boolean');\n      this.ssl = options.ssl;\n      this.port = 443;\n    }\n\n    if (options.host != null) {\n      assert(typeof options.host === 'string');\n      this.host = options.host;\n    }\n\n    if (options.port != null) {\n      assert((options.port & 0xffff) === options.port);\n      assert(options.port !== 0);\n      this.port = options.port;\n    }\n\n    if (options.path != null) {\n      assert(typeof options.path === 'string');\n      this.path = options.path;\n    }\n\n    if (options.query != null) {\n      if (typeof options.query === 'string') {\n        this.query = options.query;\n      } else {\n        assert(typeof options.query === 'object');\n        this.query = qs.stringify(options.query);\n      }\n    }\n\n    if (options.username != null) {\n      assert(typeof options.username === 'string');\n      this.username = options.username;\n    }\n\n    if (options.password != null) {\n      assert(typeof options.password === 'string');\n      this.password = options.password;\n    }\n\n    if (options.strictSSL != null) {\n      assert(typeof options.strictSSL === 'boolean');\n      this.strictSSL = options.strictSSL;\n    }\n\n    if (options.pool != null) {\n      assert(typeof options.pool === 'boolean');\n      this.pool = options.pool;\n    }\n\n    if (options.agent != null) {\n      assert(typeof options.agent === 'string');\n      this.agent = options.agent;\n    }\n\n    if (options.json != null) {\n      assert(typeof options.json === 'object');\n      this.body = Buffer.from(JSON.stringify(options.json), 'utf8');\n      this.type = 'json';\n    }\n\n    if (options.form != null) {\n      assert(typeof options.form === 'object');\n      this.body = Buffer.from(qs.stringify(options.form), 'utf8');\n      this.type = 'form';\n    }\n\n    if (options.type != null) {\n      assert(typeof options.type === 'string');\n      this.type = options.type;\n    }\n\n    if (options.expect != null) {\n      assert(typeof options.expect === 'string');\n      this.expect = options.expect;\n    }\n\n    if (options.body != null) {\n      if (typeof options.body === 'string') {\n        this.body = Buffer.from(options.body, 'utf8');\n      } else {\n        assert(Buffer.isBuffer(options.body));\n        this.body = options.body;\n      }\n    }\n\n    if (options.timeout != null) {\n      assert(typeof options.timeout === 'number');\n      this.timeout = options.timeout;\n    }\n\n    if (options.limit != null) {\n      assert(typeof options.limit === 'number');\n      this.limit = options.limit;\n    }\n\n    if (options.maxRedirects != null) {\n      assert(typeof options.maxRedirects === 'number');\n      this.maxRedirects = options.maxRedirects;\n    }\n\n    if (options.headers != null) {\n      assert(typeof options.headers === 'object');\n      this.headers = options.headers;\n    }\n\n    if (options.lookup != null) {\n      assert(typeof options.lookup === 'function');\n      this.lookup = options.lookup;\n    }\n\n    return this;\n  }\n\n  navigate(url) {\n    assert(typeof url === 'string');\n\n    if (url.indexOf('://') === -1)\n      url = 'http://' + url;\n\n    const data = URL.parse(url);\n\n    if (data.protocol !== 'http:'\n        && data.protocol !== 'https:') {\n      throw new Error('Malformed URL.');\n    }\n\n    if (!data.hostname)\n      throw new Error('Malformed URL.');\n\n    this.ssl = data.protocol === 'https:';\n    this.host = data.hostname;\n    this.port = this.ssl ? 443 : 80;\n\n    if (data.port != null) {\n      const port = parseInt(data.port, 10);\n      assert((port & 0xffff) === port);\n      this.port = port;\n    }\n\n    this.path = data.pathname;\n    this.query = data.query;\n\n    if (data.auth) {\n      const parts = data.auth.split(':');\n      this.username = parts.shift();\n      this.password = parts.join(':');\n    }\n\n    return this;\n  }\n\n  isExpected(type) {\n    assert(typeof type === 'string');\n\n    if (!this.expect)\n      return true;\n\n    return this.expect === type;\n  }\n\n  isOverflow(hdr) {\n    if (hdr == null)\n      return false;\n\n    assert(typeof hdr === 'string');\n\n    if (!this.buffer)\n      return false;\n\n    hdr = hdr.trim();\n\n    if (!/^\\d+$/.test(hdr))\n      return false;\n\n    hdr = hdr.replace(/^0+/g, '');\n\n    if (hdr.length === 0)\n      hdr = '0';\n\n    if (hdr.length > 15)\n      return false;\n\n    const length = parseInt(hdr, 10);\n\n    if (!Number.isSafeInteger(length))\n      return true;\n\n    return length > this.limit;\n  }\n\n  getBackend() {\n    ensureRequires(this.ssl);\n    return this.ssl ? https : http;\n  }\n\n  getHeaders() {\n    const headers = Object.create(null);\n\n    headers['User-Agent'] = this.agent;\n\n    if (this.type)\n      headers['Content-Type'] = mime.type(this.type);\n\n    if (this.body)\n      headers['Content-Length'] = this.body.length.toString(10);\n\n    if (this.username || this.password) {\n      const auth = `${this.username}:${this.password}`;\n      const data = Buffer.from(auth, 'utf8');\n      headers['Authorization'] = `Basic ${data.toString('base64')}`;\n    }\n\n    Object.assign(headers, this.headers);\n\n    return headers;\n  }\n\n  redirect(location) {\n    assert(typeof location === 'string');\n\n    let url = '';\n\n    if (this.ssl)\n      url += 'https://';\n    else\n      url += 'http://';\n\n    if (this.host.indexOf(':') !== -1)\n      url += `[${this.host}]`;\n    else\n      url += this.host;\n\n    url += ':' + this.port;\n    url += this.path;\n\n    if (this.query)\n      url += '?' + this.query;\n\n    this.navigate(URL.resolve(url, location));\n\n    return this;\n  }\n\n  toHTTP() {\n    let query = '';\n\n    if (this.query)\n      query = '?' + this.query;\n\n    return {\n      method: this.method,\n      host: this.host,\n      port: this.port,\n      path: this.path + query,\n      headers: this.getHeaders(),\n      agent: this.pool ? null : false,\n      lookup: this.lookup || undefined,\n      rejectUnauthorized: this.strictSSL\n    };\n  }\n}\n\nclass Request extends Stream {\n  /**\n   * Request\n   * @constructor\n   * @private\n   * @param {Object} options\n   */\n\n  constructor(options, buffer) {\n    super();\n\n    this.options = new RequestOptions(options, buffer);\n    this.req = null;\n    this.res = null;\n    this.statusCode = 0;\n    this.headers = Object.create(null);\n    this.type = 'bin';\n    this.redirects = 0;\n    this.timeout = null;\n    this.finished = false;\n\n    this.onResponse = this.handleResponse.bind(this);\n    this.onData = this.handleData.bind(this);\n    this.onEnd = this.handleEnd.bind(this);\n\n    this.total = 0;\n    this.decoder = null;\n    this.buf = [];\n    this.str = '';\n  }\n\n  startTimeout() {\n    if (!this.options.timeout)\n      return;\n\n    this.timeout = setTimeout(() => {\n      this.finish(new Error('Request timed out.'));\n    }, this.options.timeout);\n  }\n\n  stopTimeout() {\n    if (this.timeout != null) {\n      clearTimeout(this.timeout);\n      this.timeout = null;\n    }\n  }\n\n  cleanup() {\n    this.stopTimeout();\n\n    if (this.req) {\n      this.req.removeListener('response', this.onResponse);\n      this.req.removeListener('error', this.onEnd);\n      this.req.addListener('error', () => {});\n    }\n\n    if (this.res) {\n      this.res.removeListener('data', this.onData);\n      this.res.removeListener('error', this.onEnd);\n      this.res.removeListener('end', this.onEnd);\n      this.res.addListener('error', () => {});\n    }\n  }\n\n  close() {\n    if (this.req) {\n      try {\n        this.req.abort();\n      } catch (e) {\n        ;\n      }\n    }\n\n    if (this.res) {\n      try {\n        this.res.destroy();\n      } catch (e) {\n        ;\n      }\n    }\n\n    this.cleanup();\n\n    this.req = null;\n    this.res = null;\n  }\n\n  destroy() {\n    this.close();\n  }\n\n  start() {\n    const http = this.options.getBackend();\n    const options = this.options.toHTTP();\n\n    this.startTimeout();\n\n    this.req = http.request(options);\n    this.res = null;\n\n    if (this.options.body)\n      this.req.write(this.options.body);\n\n    this.req.on('response', this.onResponse);\n    this.req.on('error', this.onEnd);\n  }\n\n  write(data) {\n    return this.req.write(data);\n  }\n\n  end() {\n    return this.req.end();\n  }\n\n  finish(err) {\n    if (this.finished)\n      return;\n\n    this.finished = true;\n\n    if (err) {\n      this.destroy();\n      this.emit('error', err);\n      return;\n    }\n\n    this.cleanup();\n    this.emit('end');\n    this.emit('close');\n  }\n\n  handleResponse(res) {\n    const {headers} = res;\n    const location = headers['location'];\n\n    if (location) {\n      if (this.redirects >= this.options.maxRedirects) {\n        this.finish(new Error('Too many redirects.'));\n        return;\n      }\n\n      this.redirects += 1;\n      this.close();\n\n      try {\n        this.options.redirect(location);\n      } catch (e) {\n        this.finish(e);\n        return;\n      }\n\n      this.start();\n      this.end();\n\n      return;\n    }\n\n    const type = mime.ext(headers['content-type']);\n\n    if (!this.options.isExpected(type)) {\n      this.finish(new Error('Wrong content-type for response.'));\n      return;\n    }\n\n    const length = headers['content-length'];\n\n    if (this.options.isOverflow(length)) {\n      this.finish(new Error('Response exceeded limit.'));\n      return;\n    }\n\n    this.res = res;\n    this.statusCode = res.statusCode;\n    this.headers = headers;\n    this.type = type;\n\n    this.res.on('data', this.onData);\n    this.res.on('error', this.onEnd);\n    this.res.on('end', this.onEnd);\n\n    this.emit('headers', headers);\n    this.emit('type', type);\n    this.emit('response', res);\n\n    if (this.options.buffer) {\n      if (mime.textual(this.type)) {\n        this.decoder = new StringDecoder('utf8');\n        this.str = '';\n      } else {\n        this.buf = [];\n      }\n    }\n  }\n\n  handleData(data) {\n    this.total += data.length;\n\n    this.emit('data', data);\n\n    if (this.options.buffer) {\n      if (this.options.limit) {\n        if (this.total > this.options.limit) {\n          this.finish(new Error('Response exceeded limit.'));\n          return;\n        }\n      }\n\n      if (this.decoder) {\n        this.str += this.decoder.write(data);\n        return;\n      }\n\n      this.buf.push(data);\n    }\n  }\n\n  handleEnd(err) {\n    this.finish(err);\n  }\n\n  text() {\n    if (this.decoder)\n      return this.str;\n    return this.buffer().toString('utf8');\n  }\n\n  buffer() {\n    if (this.decoder)\n      return Buffer.from(this.str, 'utf8');\n    return Buffer.concat(this.buf);\n  }\n\n  json() {\n    const text = this.text().trim();\n\n    if (text.length === 0)\n      return Object.create(null);\n\n    const body = JSON.parse(text);\n\n    if (!body || typeof body !== 'object')\n      throw new Error('JSON body is a non-object.');\n\n    return body;\n  }\n\n  form() {\n    return qs.parse(this.text());\n  }\n}\n\n/**\n * Make an HTTP request.\n * @param {Object} options\n * @returns {Promise}\n */\n\nfunction request(options) {\n  if (typeof options === 'string')\n    options = { url: options };\n\n  return new Promise((resolve, reject) => {\n    const req = new Request(options, true);\n\n    req.on('error', err => reject(err));\n    req.on('end', () => resolve(req));\n\n    req.start();\n    req.end();\n  });\n}\n\nrequest.stream = function stream(options) {\n  const req = new Request(options, false);\n  req.start();\n  return req;\n};\n\n/*\n * Helpers\n */\n\nfunction ensureRequires(ssl) {\n  if (!URL)\n    URL = require('url');\n\n  if (!qs)\n    qs = require('querystring');\n\n  if (!http)\n    http = require('http');\n\n  if (ssl && !https)\n    https = require('https');\n\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder').StringDecoder;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = request;\n","/*!\n * brq.js - simple request module\n * Copyright (c) 2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/brq\n */\n\n'use strict';\n\nmodule.exports = require('./request');\n","import Resolver from \"./Resolver.js\";\nimport Handshake from \"./resolvers/handshake.js\";\nimport Icann from \"./resolvers/icann.js\";\nimport Eip137 from \"./resolvers/eip137.js\";\n\nconst resolver = new Resolver()\nresolver.registerResolver(new Icann())\nresolver.registerResolver(new Eip137())\nresolver.registerResolver(new Handshake())\n\nexport {Resolver}\nexport default resolver\n","import SubResolver from \"./SubResolver.js\";\n\nexport default class Resolver {\n\n    private _resolvers: SubResolver[] = [];\n    private _portals: string[] = [];\n\n    public async resolve(input: string, params: object = []): Promise<string | boolean> {\n        for (let resolver of this._resolvers) {\n            let result = await resolver.resolve(input, params);\n            if (result) {\n                return result;\n            }\n        }\n\n        return false;\n    }\n\n    public registerResolver(resolver: SubResolver): void {\n        this._resolvers.push(resolver);\n    }\n\n    public registerPortal(hostname: string): void {\n        this._portals.push(hostname);\n    }\n\n    set portals(value: string[]) {\n        this._portals = value;\n    }\n\n    public getPortal() {\n        return this._portals[Math.floor(Math.random() * (1 + this._portals.length - 1))]\n    }\n}\n","import SubResolver from \"../SubResolver.js\";\nimport resolver from \"../index.js\";\nimport {isDomain, isIp, registryEntryRegExp, startsWithSkylinkRegExp} from \"../lib/util.js\";\n\n// @ts-ignore\nimport {NodeClient} from \"hs-client\";\nimport HnsClient from \"./handshake/HnsClient.js\";\nimport {SkynetClient} from \"skynet-js\";\n\n//const {SkynetClient} = Skynet;\n\nexport default class Handshake implements SubResolver {\n    async resolve(input: string, params: object = {}): Promise<string | boolean> {\n        let tld = input;\n\n        if (isIp(input)) {\n            return false;\n        }\n\n        if (input.endsWith('.eth')) {\n            return false;\n        }\n\n        if (input.includes('.')) {\n            tld = input.split('.')[input.split('.').length - 1];\n        }\n\n        let records = await Handshake.query(tld);\n        if (!records) {\n            return false;\n        }\n        let result: string | boolean = false;\n\n        for (let record of (<object[]>records).reverse()) {\n            // @ts-ignore\n            switch (record.type) {\n                case \"NS\": {\n                    result = await Handshake.processNs(input, record, records);\n                    break;\n                }\n                case \"TXT\": {\n                    result = await Handshake.processTxt(record);\n                    break;\n                }\n                // @ts-ignore\n                default: {\n                    // @ts-ignore\n                    break;\n                }\n            }\n\n            if (result) {\n                break;\n            }\n        }\n\n        return result;\n    }\n\n    // @ts-ignore\n    private static async processNs(domain, record, records) {\n        // @ts-ignore\n        let glue = records.slice().find(\n            // @ts-ignore\n            (item: object) => ['GLUE4', 'GLUE6'].includes(item.type) && item.ns === record.ns);\n\n        if (glue) {\n            return resolver.resolve(glue.address, {subquery: true, domain});\n        }\n\n        if (isDomain(record.ns)) {\n            return resolver.resolve(record.ns, {subquery: true});\n        }\n\n        let result = await resolver.resolve(record.ns, {domain: domain});\n\n        return result || record.ns;\n    }\n\n    private static async query(tld: string): Promise<object | boolean> {\n        const portal = resolver.getPortal();\n        const clientOptions = {\n            ssl: true,\n            network: 'main',\n            host: portal,\n            port: 443,\n            headers: {\n                'X-Chain': 'hns',\n            }\n        };\n\n        const client = new HnsClient(clientOptions);\n        let resp;\n        try {\n            // noinspection TypeScriptValidateJSTypes,JSVoidFunctionReturnValueUsed\n            resp = await client.execute('getnameresource', [tld]);\n        } catch (e) {\n            console.error(e);\n            return false;\n        }\n\n        // @ts-ignore\n        return resp?.result?.records || [];\n    }\n\n    private static async processTxt(record: object): Promise<string | boolean> {\n        // @ts-ignore\n        let matches;\n        // @ts-ignore\n        if ((matches = record.txt.slice().pop().match(startsWithSkylinkRegExp))) {\n            return decodeURIComponent(matches[2]);\n        }\n\n        // @ts-ignore\n        if ((matches = record.txt.slice().pop().match(registryEntryRegExp))) {\n\n            const client = new SkynetClient(`https://${resolver.getPortal()}`);\n\n            let pubKey = decodeURIComponent(matches.groups.publickey).replace('ed25519:', '');\n\n            let entry = await client.registry.getEntry(pubKey,\n                                                       matches.groups.datakey,\n                                                       // @ts-ignore\n                                                       {hashedDataKeyHex: true});\n\n            return Buffer.from(<Uint8Array>entry.entry?.data).toString()\n        }\n\n        return false;\n    }\n}\n","export function isIp(ip: string){\n    return /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ip);\n}\n\nexport function isDomain(domain: string){\n    return /(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\\.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]/.test(domain);\n}\n\nexport const startsWithSkylinkRegExp = /^(sia:\\/\\/)?([a-zA-Z0-9_-]{46})/;\nexport const registryEntryRegExp = /^skyns:\\/\\/(?<publickey>[a-zA-Z0-9%]+)\\/(?<datakey>[a-zA-Z0-9%]+)$/;\n","import {posix as Path} from \"path\";\n// @ts-ignore\nimport brq from 'brq'\nimport assert from 'assert'\n\nimport {NodeClient} from \"@lumeweb/hs-client\";\n\nexport default class HnsClient extends NodeClient {\n    constructor(options: object) {\n        super(options);\n    }\n\n    async execute(name: string, params: any[]): Promise<object> {\n        //async execute(endpoint: string, method: string, params: any) {\n        // @ts-ignore\n        assert(typeof name === 'string');\n        // @ts-ignore\n        assert(Array.isArray(params));\n\n        this.sequence += 1;\n\n        const res = await brq({\n                                  method: 'POST',\n                                  ssl: true,\n                                  strictSSL: this.strictSSL,\n                                  host: this.host,\n                                  port: this.port,\n                                  path: Path.join(this.path, '/rpc'),\n                                  username: this.username,\n                                  password: this.password,\n                                  headers: this.headers,\n                                  timeout: this.timeout,\n                                  limit: this.limit,\n                                  pool: true,\n                                  query: {\n                                      // @ts-ignore\n                                      chain: this.headers['X-Chain'] ?? 'hns'\n                                  },\n                                  json: {\n                                      jsonrpc: '2.0',\n                                      method: name,\n                                      params: params,\n                                      chain: 'hns',\n                                      id: this.sequence\n                                  }\n                              });\n\n        if (res.statusCode === 401) {\n            throw new RPCError('Unauthorized (bad API key).', -1);\n        }\n\n        if (res.type !== 'json') {\n            throw new Error('Bad response (wrong content-type).');\n        }\n\n        const json = res.json();\n\n        if (!json) {\n            throw new Error('No body for JSON-RPC response.');\n        }\n\n        if (json.error) {\n            const {message, code} = json.error;\n            throw new RPCError(message, code);\n        }\n\n        if (res.statusCode !== 200) {\n            throw new Error(`Status code: ${res.statusCode}.`);\n        }\n\n        return json;\n    }\n}\n\nclass RPCError extends Error {\n    constructor(msg: string, code: number) {\n        super();\n\n        // @ts-ignore\n        this.type = 'RPCError';\n        this.message = String(msg);\n        // @ts-ignore\n        this.code = code >> 0;\n\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, RPCError);\n        }\n    }\n}\n\n","import SubResolver from \"../SubResolver.js\";\nimport {isDomain} from \"../lib/util.js\";\nimport resolver from \"../index.js\";\n\n// @ts-ignore\nimport {NodeClient} from '@lumeweb/hs-client';\n\nexport default class Icann implements SubResolver {\n    async resolve(input: string, params: object = {}): Promise<string | boolean> {\n        // @ts-ignore\n        if (!params || !('subquery' in params) || !params.subquery) {\n            return false;\n        }\n\n        if (!isDomain(input)) {\n            return false;\n        }\n\n        const portal = resolver.getPortal();\n        const clientOptions = {\n            ssl: true,\n            host: portal,\n            port: 443,\n            path: '/pocketdns',\n            headers: {\n                'X-Chain': 'icann',\n            }\n        };\n        const client = new NodeClient(clientOptions);\n        let resp: object | boolean = false;\n        try {\n            let rpcParams = {};\n\n            // @ts-ignore\n            rpcParams.domain = params.domain || input;\n            // @ts-ignore\n            rpcParams.nameserver = !params.domain ? null : input;\n\n            // noinspection TypeScriptValidateJSTypes,JSVoidFunctionReturnValueUsed\n            resp = await client.execute('dnslookup', rpcParams);\n        } catch (e) {\n            console.error(e);\n            return false;\n        }\n\n        // @ts-ignore\n        return resp.result;\n    }\n\n}\n","import SubResolver from \"../SubResolver.js\";\nimport resolver from \"../index.js\";\n// @ts-ignore\nimport ENSRoot, {getEnsAddress} from '@ensdomains/ensjs';\nimport {ethers, providers} from \"ethers\";\nimport * as URL from \"url\";\n// @ts-ignore\nimport contentHasher from 'content-hash'\n// @ts-ignore\nimport {profiles as contentHashProfiles} from 'content-hash/src/profiles.js'\n// @ts-ignore\nimport {encodeContenthash} from '@ensdomains/ensjs/dist/utils/contents.js'\n\nconst ENS = ENSRoot.default;\n\nexport default class Eip137 implements SubResolver {\n    async resolve(input: string, params: object = {}): Promise<string | boolean> {\n        if (input.endsWith('.eth')) {\n            return await this.resolveEns(input);\n        }\n\n        let hip5Data = input.split('.');\n        // @ts-ignore\n        if (2 <= hip5Data.length && 'domain' in params) {\n            if (ethers.utils.isAddress(hip5Data[0])) {\n                // @ts-ignore\n                return await this.resolveHip5(params.domain, hip5Data);\n            }\n        }\n\n        return false;\n    }\n\n    private async resolveEns(input: string): Promise<string | boolean> {\n        let data = [getEnsAddress('1'), 'eth-mainnet'];\n\n        return this.resolveHip5(input, data);\n    }\n\n    private async resolveHip5(domain: string, data: string[]): Promise<string | boolean> {\n        let connection: providers.StaticJsonRpcProvider = this.getConnection(\n            data[1].replace('_', ''));\n\n        // @ts-ignore\n        const ens = new ENS({provider: connection, ensAddress: data[0]})\n\n        try {\n            let name = await ens.name(domain);\n            let contentResult = await name.getContent();\n            let url = await name.getText('url');\n            let content;\n\n            if (typeof contentResult === 'string' && 0 === Number(contentResult)) {\n                content = false;\n            }\n\n            if (typeof contentResult === 'object' && 'contenthash' === contentResult.contentType) {\n                content = contentResult.value;\n            }\n\n            return content || url || false;\n        } catch (e) {\n            console.log(e);\n            return false;\n        }\n    }\n\n    private getConnection(chain: string): providers.StaticJsonRpcProvider {\n\n        // @ts-ignore\n        let apiUrl = URL.parse(`https://${resolver.getPortal()}/pocketdns`);\n        if (URL.URLSearchParams) {\n            let params = new URL.URLSearchParams;\n            params.set('chain', chain);\n            apiUrl.search = params.toString();\n        } else {\n            apiUrl.search = `?chain=${chain}`;\n        }\n        return new ethers.providers.StaticJsonRpcProvider({\n                                                              // @ts-ignore\n                                                              url: apiUrl.format()\n                                                          });\n    }\n}\n"],"mappings":"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","names":[]}